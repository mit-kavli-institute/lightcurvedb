"""updating internal telemetry models

Revision ID: ca0d6f4e1d49
Revises: e8b0eecf8359
Create Date: 2021-09-15 15:52:20.137049

"""
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision = "ca0d6f4e1d49"
down_revision = "e8b0eecf8359"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "qlpstages",
        sa.Column(
            "created_on",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=64), nullable=True),
        sa.Column("slug", sa.String(length=64), nullable=True),
        sa.Column("description", sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
        sa.UniqueConstraint("slug"),
    )
    op.create_table(
        "qlpoperations",
        sa.Column(
            "created_on",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("id", sa.BigInteger(), nullable=False),
        sa.Column("process_id", sa.Integer(), nullable=False),
        sa.Column("job_size", sa.BigInteger(), nullable=False),
        sa.Column("unit", sa.String(length=32), nullable=False),
        sa.Column("time_start", sa.DateTime(), nullable=False),
        sa.Column("time_end", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["process_id"],
            ["qlpprocesses.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_qlpoperations_time_end"),
        "qlpoperations",
        ["time_end"],
        unique=False,
    )
    op.create_index(
        op.f("ix_qlpoperations_time_start"),
        "qlpoperations",
        ["time_start"],
        unique=False,
    )
    op.create_index(
        op.f("ix_qlpoperations_process_id"),
        "qlpoperations",
        ["process_id"],
        unique=False,
    )
    op.drop_index(
        "ix_qlpalterations__alteration_type", table_name="qlpalterations"
    )
    op.drop_index("ix_qlpalterations__query", table_name="qlpalterations")
    op.drop_index(
        "ix_qlpalterations_est_item_size", table_name="qlpalterations"
    )
    op.drop_index(
        "ix_qlpalterations_n_altered_items", table_name="qlpalterations"
    )
    op.drop_index(
        "ix_qlpalterations_target_model", table_name="qlpalterations"
    )
    op.drop_index("ix_qlpalterations_time_end", table_name="qlpalterations")
    op.drop_index("ix_qlpalterations_time_start", table_name="qlpalterations")
    op.drop_table("qlpalterations")

    op.add_column(
        "qlpprocesses", sa.Column("host", sa.String(length=64), nullable=True)
    )
    op.add_column(
        "qlpprocesses",
        sa.Column("lcdb_version", sa.String(length=32), nullable=True),
    )
    op.add_column(
        "qlpprocesses",
        sa.Column("process_completion", sa.DateTime(), nullable=True),
    )
    op.add_column(
        "qlpprocesses",
        sa.Column(
            "process_start",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
    )
    op.add_column(
        "qlpprocesses",
        sa.Column(
            "runtime_parameters",
            postgresql.JSONB(astext_type=sa.Text()),
            nullable=True,
        ),
    )
    op.add_column(
        "qlpprocesses", sa.Column("stage_id", sa.Integer(), nullable=False)
    )
    op.add_column(
        "qlpprocesses", sa.Column("state", sa.String(length=64), nullable=True)
    )
    op.add_column(
        "qlpprocesses", sa.Column("user", sa.String(length=64), nullable=True)
    )
    op.drop_index(
        "ix_qlpprocesses_additional_version_info", table_name="qlpprocesses"
    )
    op.drop_index("ix_qlpprocesses_job_type", table_name="qlpprocesses")
    op.drop_index(
        "ix_qlpprocesses_job_version_major", table_name="qlpprocesses"
    )
    op.drop_index(
        "ix_qlpprocesses_job_version_minor", table_name="qlpprocesses"
    )
    op.drop_index(
        "ix_qlpprocesses_job_version_revision", table_name="qlpprocesses"
    )
    op.create_index(
        op.f("ix_qlpprocesses_host"),
        "qlpprocesses",
        ["host"],
        unique=False,
        postgresql_using="gin",
    )
    op.create_index(
        op.f("ix_qlpprocesses_lcdb_version"),
        "qlpprocesses",
        ["lcdb_version"],
        unique=False,
        postgresql_using="gin",
    )
    op.create_index(
        op.f("ix_qlpprocesses_process_completion"),
        "qlpprocesses",
        ["process_completion"],
        unique=False,
    )
    op.create_index(
        op.f("ix_qlpprocesses_process_start"),
        "qlpprocesses",
        ["process_start"],
        unique=False,
    )
    op.create_index(
        op.f("ix_qlpprocesses_runtime_parameters"),
        "qlpprocesses",
        ["runtime_parameters"],
        unique=False,
        postgresql_using="gin",
    )
    op.create_index(
        op.f("ix_qlpprocesses_state"),
        "qlpprocesses",
        ["state"],
        unique=False,
        postgresql_using="gin",
    )
    op.create_index(
        op.f("ix_qlpprocesses_user"),
        "qlpprocesses",
        ["user"],
        unique=False,
        postgresql_using="gin",
    )
    op.create_index(
        op.f("ix_qlpprocesses_stage_id"),
        "qlpprocesses",
        ["stage_id"],
        unique=False,
    )
    op.create_foreign_key(
        None, "qlpprocesses", "qlpstages", ["stage_id"], ["id"]
    )
    op.drop_column("qlpprocesses", "job_version_minor")
    op.drop_column("qlpprocesses", "job_version_revision")
    op.drop_column("qlpprocesses", "job_type")
    op.drop_column("qlpprocesses", "additional_version_info")
    op.drop_column("qlpprocesses", "job_version_major")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "qlpprocesses",
        sa.Column(
            "job_version_major",
            sa.SMALLINT(),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.add_column(
        "qlpprocesses",
        sa.Column(
            "additional_version_info",
            postgresql.JSONB(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.add_column(
        "qlpprocesses",
        sa.Column(
            "job_type",
            sa.VARCHAR(length=255),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.add_column(
        "qlpprocesses",
        sa.Column(
            "job_version_revision",
            sa.INTEGER(),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.add_column(
        "qlpprocesses",
        sa.Column(
            "job_version_minor",
            sa.SMALLINT(),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.drop_constraint(None, "qlpprocesses", type_="foreignkey")
    op.drop_index(op.f("ix_qlpprocesses_user"), table_name="qlpprocesses")
    op.drop_index(op.f("ix_qlpprocesses_state"), table_name="qlpprocesses")
    op.drop_index(
        op.f("ix_qlpprocesses_runtime_parameters"), table_name="qlpprocesses"
    )
    op.drop_index(
        op.f("ix_qlpprocesses_process_start"), table_name="qlpprocesses"
    )
    op.drop_index(
        op.f("ix_qlpprocesses_process_completion"), table_name="qlpprocesses"
    )
    op.drop_index(
        op.f("ix_qlpprocesses_lcdb_version"), table_name="qlpprocesses"
    )
    op.drop_index(op.f("ix_qlpprocesses_host"), table_name="qlpprocesses")
    op.create_index(
        "ix_qlpprocesses_job_version_revision",
        "qlpprocesses",
        ["job_version_revision"],
        unique=False,
    )
    op.create_index(
        "ix_qlpprocesses_job_version_minor",
        "qlpprocesses",
        ["job_version_minor"],
        unique=False,
    )
    op.create_index(
        "ix_qlpprocesses_job_version_major",
        "qlpprocesses",
        ["job_version_major"],
        unique=False,
    )
    op.create_index(
        "ix_qlpprocesses_job_type", "qlpprocesses", ["job_type"], unique=False
    )
    op.create_index(
        "ix_qlpprocesses_additional_version_info",
        "qlpprocesses",
        ["additional_version_info"],
        unique=False,
    )
    op.drop_column("qlpprocesses", "user")
    op.drop_column("qlpprocesses", "state")
    op.drop_column("qlpprocesses", "stage_id")
    op.drop_column("qlpprocesses", "runtime_parameters")
    op.drop_column("qlpprocesses", "process_start")
    op.drop_column("qlpprocesses", "process_completion")
    op.drop_column("qlpprocesses", "lcdb_version")
    op.drop_column("qlpprocesses", "host")
    op.create_table(
        "qlpalterations",
        sa.Column(
            "created_on",
            postgresql.TIMESTAMP(),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("id", sa.BIGINT(), autoincrement=True, nullable=False),
        sa.Column(
            "process_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "target_model",
            sa.VARCHAR(length=255),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "_alteration_type",
            sa.VARCHAR(length=255),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "n_altered_items", sa.BIGINT(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "est_item_size", sa.BIGINT(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "time_start",
            postgresql.TIMESTAMP(),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "time_end",
            postgresql.TIMESTAMP(),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("_query", sa.TEXT(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ["process_id"],
            ["qlpprocesses.id"],
            name="qlpalterations_process_id_fkey",
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name="qlpalterations_pkey"),
    )
    op.create_index(
        "ix_qlpalterations_time_start",
        "qlpalterations",
        ["time_start"],
        unique=False,
    )
    op.create_index(
        "ix_qlpalterations_time_end",
        "qlpalterations",
        ["time_end"],
        unique=False,
    )
    op.create_index(
        "ix_qlpalterations_target_model",
        "qlpalterations",
        ["target_model"],
        unique=False,
    )
    op.create_index(
        "ix_qlpalterations_n_altered_items",
        "qlpalterations",
        ["n_altered_items"],
        unique=False,
    )
    op.create_index(
        "ix_qlpalterations_est_item_size",
        "qlpalterations",
        ["est_item_size"],
        unique=False,
    )
    op.create_index(
        "ix_qlpalterations__query", "qlpalterations", ["_query"], unique=False
    )
    op.create_index(
        "ix_qlpalterations__alteration_type",
        "qlpalterations",
        ["_alteration_type"],
        unique=False,
    )
    op.drop_index(
        op.f("ix_qlpoperations_time_start"), table_name="qlpoperations"
    )
    op.drop_index(
        op.f("ix_qlpoperations_time_end"), table_name="qlpoperations"
    )
    op.drop_table("qlpoperations")
    op.drop_table("qlpstages")
    # ### end Alembic commands ###
