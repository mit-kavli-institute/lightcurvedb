"""empty message

Revision ID: c4daf006804e
Revises: 00e0b834d97c
Create Date: 2022-08-09 10:01:27.344549

"""
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision = "c4daf006804e"
down_revision = "00e0b834d97c"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "apertures", sa.Column("description", sa.String(), nullable=True)
    )
    op.execute("ALTER TABLE apertures DROP CONSTRAINT apertures_pkey CASCADE")
    op.create_unique_constraint("apertures_unique_name", "apertures", ["name"])

    op.execute("ALTER TABLE apertures ADD COLUMN id SERIAL PRIMARY KEY")

    op.execute(
        "ALTER TABLE frametypes DROP CONSTRAINT frametypes_pkey CASCADE"
    )
    op.execute("ALTER TABLE frametypes ADD COLUMN id SERIAL PRIMARY KEY")
    op.create_unique_constraint(
        "frametypes_unique_name", "frametypes", ["name"]
    )

    op.execute(
        "ALTER TABLE spacecraftephemeris "
        "DROP CONSTRAINT spacecraftephemeris_pkey CASCADE"
    )
    op.execute(
        "ALTER TABLE spacecraftephemeris ADD COLUMN id SERIAL PRIMARY KEY"
    )
    op.create_unique_constraint(
        "spacecraftephemeris_unique_time",
        "spacecraftephemeris",
        ["barycentric_dynamical_time"],
    )

    op.execute(
        "ALTER TABLE lightcurvetypes "
        "DROP CONSTRAINT lightcurvetypes_pkey CASCADE"
    )
    op.create_unique_constraint(
        "lightcurvetypes_unique_name", "lightcurvetypes", ["name"]
    )
    op.execute(
        "ALTER TABLE lightcurvetypes "
        "ADD CONSTRAINT lightcurvetypes_pkey PRIMARY KEY (id)"
    )

    op.create_table(
        "orbit_lightcurves",
        sa.Column(
            "created_on",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("id", sa.BigInteger(), nullable=False),
        sa.Column("tic_id", sa.BigInteger(), nullable=False),
        sa.Column("camera", sa.SmallInteger(), nullable=False),
        sa.Column("ccd", sa.SmallInteger(), nullable=False),
        sa.Column("orbit_id", sa.Integer(), nullable=False),
        sa.Column("aperture_id", sa.SmallInteger(), nullable=False),
        sa.Column("lightcurve_type_id", sa.SmallInteger(), nullable=False),
        sa.ForeignKeyConstraint(
            ["aperture_id"],
            ["apertures.id"],
            onupdate="CASCADE",
            ondelete="RESTRICT",
        ),
        sa.ForeignKeyConstraint(
            ["lightcurve_type_id"],
            ["lightcurvetypes.id"],
        ),
        sa.ForeignKeyConstraint(
            ["orbit_id"], ["orbits.id"], onupdate="CASCADE", ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "hyper_lightpoints",
        sa.Column("lightcurve_id", sa.BigInteger(), nullable=False),
        sa.Column("cadence", sa.Integer(), nullable=False),
        sa.Column("barycentric_julian_date", sa.Float(), nullable=False),
        sa.Column("data", postgresql.DOUBLE_PRECISION(), nullable=True),
        sa.Column("error", postgresql.DOUBLE_PRECISION(), nullable=True),
        sa.Column("x_centroid", sa.Float(), nullable=True),
        sa.Column("y_centroid", sa.Float(), nullable=True),
        sa.Column("quality_flag", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["lightcurve_id"],
            ["orbit_lightcurves.id"],
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("lightcurve_id", "cadence"),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(
        "spacecraftephemeris_unique_time",
        "spacecraftephemeris",
        type_="unique",
    )
    op.drop_column("spacecraftephemeris", "id")

    op.drop_constraint("frametypes_unique_name", "frametypes", type_="unique")
    op.drop_column("frametypes", "id")

    op.drop_constraint("apertures_unique_name", "apertures", type_="unique")
    op.drop_column("apertures", "id")
    op.drop_column("apertures", "description")
    op.drop_table("hyper_lightpoints")
    op.drop_table("orbit_lightcurves")
    # ### end Alembic commands ###
