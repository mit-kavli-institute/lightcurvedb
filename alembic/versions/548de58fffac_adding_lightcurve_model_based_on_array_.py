"""adding lightcurve model based on array fields

Revision ID: 548de58fffac
Revises: baf937412836
Create Date: 2020-03-06 10:32:55.321827

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '548de58fffac'
down_revision = 'baf937412836'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('lightcurve_revisions',
    sa.Column('tic_id', sa.BigInteger(), nullable=True),
    sa.Column('cadence_type', sa.SmallInteger(), nullable=True),
    sa.Column('cadences', postgresql.ARRAY(sa.Integer(), dimensions=1), nullable=False),
    sa.Column('barycentric_julian_date', postgresql.ARRAY(sa.Integer(), dimensions=1), nullable=False),
    sa.Column('values', postgresql.ARRAY(postgresql.DOUBLE_PRECISION(), dimensions=1), nullable=False),
    sa.Column('errors', postgresql.ARRAY(postgresql.DOUBLE_PRECISION(), dimensions=1), nullable=False),
    sa.Column('x_centroids', postgresql.ARRAY(postgresql.DOUBLE_PRECISION(), dimensions=1), nullable=False),
    sa.Column('y_centroids', postgresql.ARRAY(postgresql.DOUBLE_PRECISION(), dimensions=1), nullable=False),
    sa.Column('quality_flags', postgresql.ARRAY(sa.Integer(), dimensions=1), nullable=False),
    sa.Column('lightcurve_type_id', sa.BigInteger(), nullable=True),
    sa.Column('aperture_id', sa.BigInteger(), nullable=True),
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['aperture_id'], ['apertures.id'], onupdate='CASCADE', ondelete='RESTRICT'),
    sa.ForeignKeyConstraint(['id'], ['qlpdataproducts.id'], ),
    sa.ForeignKeyConstraint(['lightcurve_type_id'], ['lightcurvetypes.id'], onupdate='CASCADE', ondelete='RESTRICT'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('cadence_type', 'lightcurve_type_id', 'aperture_id', 'tic_id')
    )
    op.create_index(op.f('ix_lightcurve_revisions_aperture_id'), 'lightcurve_revisions', ['aperture_id'], unique=False)
    op.create_index(op.f('ix_lightcurve_revisions_cadence_type'), 'lightcurve_revisions', ['cadence_type'], unique=False)
    op.create_index(op.f('ix_lightcurve_revisions_lightcurve_type_id'), 'lightcurve_revisions', ['lightcurve_type_id'], unique=False)
    op.create_index(op.f('ix_lightcurve_revisions_tic_id'), 'lightcurve_revisions', ['tic_id'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_index('tic_ix', 'lightcurve_revision', ['tic_id'], unique=False)
    op.drop_index(op.f('ix_lightcurve_revisions_tic_id'), table_name='lightcurve_revisions')
    op.drop_index(op.f('ix_lightcurve_revisions_lightcurve_type_id'), table_name='lightcurve_revisions')
    op.drop_index(op.f('ix_lightcurve_revisions_cadence_type'), table_name='lightcurve_revisions')
    op.drop_index(op.f('ix_lightcurve_revisions_aperture_id'), table_name='lightcurve_revisions')
    op.drop_table('lightcurve_revisions')
    # ### end Alembic commands ###
